# 1 Вычислить число π c заданной точностью d
# *Пример:*
# - при $d = 0.001, π = 3.141.$    $10^{-1} ≤ d ≤10^{-10}$
# https://completerepair.ru/kak-vychislit-chislo-pi
# Пи=4*(1 - 1/3 + 1/5 - 1/7 + 1/9... + (1/(2n+1)*(-1)^n)
# 3,1415926535 8979323846 2643383279 5028841971 6939937510
# def p_el(i):
#     s = 4 / (2 * i - 1)
#     return s
#
#
# tch = int(input("Введите точность расчета числа Пи (кол-во знаков после запятой):"))
# d = 10 ** (-tch)
# n = 0
# p = 0
# s1: float = 0
# s2: float = 0
# el: float = 1
# x = 1
# while x >= d:
#     n += 1
#     s1 = s2 + p_el(n)
#     n += 1
#     s2 = s1 - p_el(n)
#     x = s1 - s2
# p = (s1 + s2) / 2
# print(round(p, tch))

# 2 Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.
#
# n = int(input("Введите число:"))
# mn = {}
# p = 0
# for i in range(2, n + 1):
#     if n % i == 0:
#         for j in range(2, i):
#             if i % j == 0:
#                 p += 1
#         if p == 0:
#             mn.add(i)
#         else:
#             p = 0
# print(mn)

# 3 Задайте последовательность чисел. Напишите программу, которая выведет список неповторяющихся элементов исходной
# последовательности.
#
# lst = set([int(i) for i in input('Введите значения элементов через пробел: ').split()])
# print(lst)

# 4 Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от 0 до 100)
# многочлена и записать в файл многочлен степени k. *Пример:* - k=2 => 2*x² + 4*x + 5 = 0 или x² + 5 = 0 или 10*x² = 0
# Многочленом f(x) от переменной x называется выражение
# a0 + a1x + a2x2 + . . . + an−1xn−1 + anxn
# import random
#
#
# def mnogo(k):
#     s = str(random.randint(0, 100)) + "+" + str(random.randint(0, 100)) + "x"
#     for i in range(2, k + 1):
#         s += "+" + str(random.randint(0, 100)) + "x^" + str(i)
#     return s
#
#
# print(mnogo(int(input("введите степень многочлена"))))

# 5 Даны два файла, в каждом из которых находится запись многочлена. Задача - сформировать файл, содержащий сумму
# многочленов.

