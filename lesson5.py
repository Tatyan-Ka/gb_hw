# 1. Напишите программу, удаляющую из текста все слова, содержащие ""абв"".
# -*- coding: utf-8 -*-
# with open('abv.txt', 'w') as f1:
#     f1.write('Напиабвшите программу, удаляюабвщую из текста все слоабвва, содержащие ""абв""')

# with open('abv.txt', 'r') as f:
#     s = f.read().splitlines()
# s1 = list(s[0].split())
# print(s1)
# s_new = list(filter(lambda x: 'абв' not in x, s1))
# sw = ''
# for el in s_new:
#     sw += ' ' + el
# print(sw)
#
# with open('abv.txt', 'w') as f:
#     f.write(sw)

# 2. Создайте программу для игры с конфетами человек против человека.
# Условие задачи: На столе лежит 2021 конфета.
# Играют два игрока делая ход друг после друга. Первый ход определяется жеребьёвкой.
# За один ход можно забрать не более чем 28 конфет.
# Все конфеты оппонента достаются сделавшему последний ход. Сколько конфет нужно взять первому
# игроку, чтобы забрать все конфеты у своего конкурента?
# def hod(player_num, count):
#     n = 0
#     while n == 0:
#         if count < 28:
#             n = (input(f'Игрок {player_num}, осталось {count} конфет. Введите кол-во конфет от 1 до {count}:'))
#         else:
#             n = (input(f'Игрок {player_num}, осталось {count} конфет. Введите кол-во конфет от 1 до 28:'))
#         if n.isdigit():
#             if int(n) > 28 or int(n) < 1 or int(n) > count:
#                 print("Ошибка! Введите корректное кол-во конфет")
#                 n = 0
#         else:
#             print("Ошибка! Введите корректное кол-во конфет")
#             n = 0
#     return int(n)


import random

# cnt: int = 221  # всего конфет
# p1 = input('Введите имя первого игрока:')
# p2 = input('Введите имя второго игрока:')
# flag = random.randint(0, 1)
# while cnt > 0:
#     if flag:
#         n1 = hod(p1, cnt)
#         cnt -= n1
#         print(f'{p1} взял {n1} конфет. Осталось {cnt}. Ход переходит игроку {p2}')
#         flag = 0
#     else:
#         n2 = hod(p2, cnt)
#         cnt -= n2
#         print(f'{p2} взял {n2} конфет. Осталось {cnt}. Ход переходит игроку {p1}')
#         flag = 1
# if flag:
#     print(f'Игрок {p2} забирает все конфеты')
# else:
#     print(f'Игрок {p1} забирает все конфеты')

# a) Добавьте игру против бота. Достаточно сделать так, чтобы бот не брал конфет больше положенного или больше чем
# имеется в куче.


# b) Подумайте как наделить бота ""интеллектом"". Напоминаю, если перед пользователем будет лежать 29 конфет, то он,
# однозначно, проиграет. Достаточно довести игру до такой ситуации.
# cnt: int = 221  # всего конфет
# p1 = input('Введите имя игрока:')
# flag = random.randint(0, 1)
# if flag:
#     print(f'Первый ходит Игрок {p1}')
# else:
#     print('Первый ходит БОТ')
# while cnt > 0:
#     if flag:
#         n1 = hod(p1, cnt)
#         cnt -= n1
#         print(f'{p1} взял {n1} конфет. Осталось {cnt}. Ход переходит Боту')
#         flag = 0
#     else:
#         if 54 >= cnt > 29:
#             n2 = cnt - 29
#         elif cnt <= 28:
#             n2 = cnt
#         else:
#             n2 = random.randint(1, 28)
#         cnt -= n2
#         print(f'Бот взял {n2} конфет. Осталось {cnt}. Ход переходит игроку.')
#         flag = 1
# if flag:
#     print(f'БОТ забирает все конфеты')
# else:
#     print(f'Игрок {p1} забирает все конфеты')

# 3. Создайте программу для игры в ""Крестики-нолики"".
# Пример интерфейса:
#
#    |   | 0
# -----------
#    |   |
# -----------
#    | X |
# Ввод можно реализовать через введение двух чисел (номеров строки и столбца).



# 4. Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.
# s = input('Введите строку:')
# k = 1
# s_n = ''
# i = 0
# while i < len(s):
#     while (i + 1) < len(s) and s[i] == s[i + 1]:
#         k += 1
#         i += 1
#     s_n += str(k) + s[i]
#     k = 1
#     i += 1
# print(s_n)
